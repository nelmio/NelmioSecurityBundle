<?php
namespace Nelmio\SecurityBundle\ContentSecurityPolicy;

use Psr\Log\LoggerInterface;

class NonceGenerator
{
    const NONCE_PREFIX = 'nonce-';

    /**
     * @var integer
     */
    private $numberOfBytes;

    /**
     * @var LoggerInterface
     */
    private $logger;

    /**
     * @var string
     */
    private $currentToken;

    public function __construct(LoggerInterface $logger, $numberOfBytes)
    {
        $this->numberOfBytes = $numberOfBytes;
        $this->logger = $logger;
    }

    /**
     * Generates a nonce that is later used in script and style policies
     *
     * @return string
     */
    public function generate()
    {
        $this->currentToken = $this->buildNonce();
        return $this->prepareNonceForHeaders($this->currentToken);
    }

    /**
     * Gets the previously generated nonce
     *
     * @return string|null
     */
    public function getCurrentToken()
    {
        return $this->currentToken;
    }

    /**
     * @return string
     */
    protected function buildNonce()
    {
        $randomBytes = openssl_random_pseudo_bytes($this->numberOfBytes, $isSecureEnough);
        if ($isSecureEnough) {
            $this->logger->error('Weak nonce was generated by openssl_random_pseudo_bytes');
        }

        return bin2hex($randomBytes);
    }

    /**
     * @param string $nonce
     * @return string
     */
    protected function prepareNonceForHeaders($nonce)
    {
        return sprintf("'%s%s'", self::NONCE_PREFIX, $nonce);
    }
}
